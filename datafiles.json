[
{"ID":"22484713","width":100,"length":150,"WheelRadius":30,"NumberOfSensors":2,"SensorSpacing":15,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif (an[0] > black_threshold && an[1] > black_threshold)\r\n{\r\nSet_PWM(0, 8000); // Motor 0 (Left)\r\nSet_PWM(1, 8000); // Motor 1 (Right) \r\n}\r\nif (an[0] > black_threshold && an[1] <= black_threshold)\r\n{\r\nSet_PWM(0, 1500); // Motor 0 (Left)\r\nSet_PWM(1, 6000); // Motor 1 (Right) \r\n}\r\nif (an[0] <= black_threshold && an[1] > black_threshold)\r\n{\r\nSet_PWM(0, 6000); // Motor 0 (Left)\r\nSet_PWM(1, 1500); // Motor 1 (Right) \r\n}\r\n}"},
{"ID":"22519692","width":60,"length":140,"WheelRadius":35,"NumberOfSensors":3,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 7000); // Motor 0 fast\r\nSet_PWM(1, 0); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 7000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 14500); // Motor 0 medium\r\nSet_PWM(1, 14500); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"22591862","width":60,"length":140,"WheelRadius":35,"NumberOfSensors":3,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 7000); // Motor 0 fast\r\nSet_PWM(1, 0); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 7000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 14500); // Motor 0 medium\r\nSet_PWM(1, 14500); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"22507546","width":60,"length":140,"WheelRadius":35,"NumberOfSensors":3,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 7000); // Motor 0 fast\r\nSet_PWM(1, 0); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 7000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 14500); // Motor 0 medium\r\nSet_PWM(1, 14500); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"22533199","width":60,"length":140,"WheelRadius":35,"NumberOfSensors":3,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 7000); // Motor 0 fast\r\nSet_PWM(1, 0); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 7000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 14500); // Motor 0 medium\r\nSet_PWM(1, 14500); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"21421963","width":85,"length":150,"WheelRadius":37.5,"NumberOfSensors":3,"SensorSpacing":18,"BodyColour":"ff0000","WheelColour":"fdf408","LEDColour":"blue","Code":"void RobotControl() \r\n{\r\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] > black_threshold )\r\n{  // 111\r\nSet_PWM (0, 8119); // Motor 0 is fast\r\nSet_PWM (1, 8119); // Motor 1 is fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold )\r\n{  // 100\r\nSet_PWM (0, 0); // Motor 0 is fast\r\nSet_PWM (1, 6000); // Motor 1 is fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold )\r\n{  // 110\r\nSet_PWM (0, 5000); // Motor 0 is fast\r\nSet_PWM (1, 7000); // Motor 1 is fast\r\n}\r\nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold )\r\n{  // 001\r\nSet_PWM (0, 6000); // Motor 0 is fast\r\nSet_PWM (1, 0); // Motor 1 is fast\r\n}\r\nelse if(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold )\r\n{  // 011\r\nSet_PWM (0, 7000); // Motor 0 is fast\r\nSet_PWM (1, 5000); // Motor 1 is fast\r\n}\r\nelse if(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold )\r\n{  // 010\r\nSet_PWM (0, 8119); // Motor 0 is fast\r\nSet_PWM (1, 8119); // Motor 1 is fast\r\n}\r\n}\r\n"},
{"ID":"22533199","width":70,"length":168,"WheelRadius":30,"NumberOfSensors":2,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 5000); // Motor 0 fast\r\nSet_PWM(1, 2000); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 2000); // Motor 0 stop\r\nSet_PWM(1, 5000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 12000); // Motor 0 medium\r\nSet_PWM(1, 12000); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"22519692","width":70,"length":168,"WheelRadius":30,"NumberOfSensors":2,"SensorSpacing":10,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 5000); // Motor 0 fast\r\nSet_PWM(1, 2000); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 2000); // Motor 0 stop\r\nSet_PWM(1, 5000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 12000); // Motor 0 medium\r\nSet_PWM(1, 12000); // Motor 1 medium\r\n}\r\n}\r\n\r\n"},
{"ID":"22501083","width":90,"length":125,"WheelRadius":25,"NumberOfSensors":3,"SensorSpacing":15,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 8000);\r\nSet_PWM(1, 16000);\r\n}\r\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 0);\r\nSet_PWM(1, 40000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 16000);\r\nSet_PWM(1, 8000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 16000);\r\nSet_PWM(1, 16000);\r\n}\r\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 40000);\r\nSet_PWM(1, 0);\r\n}\r\n}\r\n"},
{"ID":"22476504","width":75,"length":122,"WheelRadius":33,"NumberOfSensors":3,"SensorSpacing":13,"BodyColour":"ffffff","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 1000);\r\nSet_PWM(1, 7000);\r\n}\r\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 601);\r\nSet_PWM(1, 7000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 7000);\r\nSet_PWM(1, 1000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 8191);\r\nSet_PWM(1, 8191);\r\n}\r\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 7000);\r\nSet_PWM(1, 601);\r\n}\r\n}"},
{"ID":"22515591","width":100,"length":150,"WheelRadius":25,"NumberOfSensors":2,"SensorSpacing":15,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\n{\n\tif(an[0] > black_threshold && an[1] > black_threshold)\n\t{\n\t\tSet_PWM(0, 8000);\t\t// Motor 0 \n\t\tSet_PWM(1, 8000);\t// Motor 1\n\t}\n\tif (an[0] > black_threshold && an[1] <= black_threshold)\n\t{\n\t\tSet_PWM(0, 2000);\t// Motor 0\n\t\tSet_PWM(1, 6000);\t\t// Motor 1\n\t}\n\tif (an[0] <= black_threshold && an[1] > black_threshold)\n\t{\n\t    Set_PWM(0, 6000); // Motor 0 \n\t    Set_PWM(1, 2000); // Motor 1\n\t}\n}\n\t\t\t"},
{"ID":"22592144","width":132,"length":179,"WheelRadius":34,"NumberOfSensors":4,"SensorSpacing":13,"BodyColour":"e4f500","WheelColour":"f40b0b","LEDColour":"red","Code":"bool IsOnBlack(int sensor)\r\n{\r\n    return an[sensor] > black_threshold;\r\n}\r\n\r\nbool IsOnWhite(int sensor) \r\n{\r\n    return an[sensor] < black_threshold;\r\n}\r\n\r\nvoid SetLeftMotorSpeed(int speed)\r\n{\r\n    Set_PWM(0, speed);\r\n}\r\n\r\nvoid SetRightMotorSpeed(int speed)\r\n{\r\n    Set_PWM(1, speed);\r\n}\r\n\r\nvoid RobotControl()\r\n{\r\n    if(IsOnWhite(0) && IsOnBlack(1) && IsOnBlack(2) && IsOnWhite(3)){\r\n        // Go Straight \r\n        SetLeftMotorSpeed(40000);\r\n        SetRightMotorSpeed(40000);\r\n    }\r\n\r\n    // All Left Turns\r\n    if (IsOnWhite(0) && IsOnBlack(1) && IsOnWhite(2) && IsOnWhite(3)){\r\n      SetLeftMotorSpeed(30000);\r\n      SetRightMotorSpeed(40000);\r\n    }\r\n    if (IsOnBlack(0) && IsOnWhite(3)) {\r\n        if(IsOnBlack(1) && IsOnBlack(2)){\r\n            // Turn left\r\n            SetLeftMotorSpeed(35000);\r\n            SetRightMotorSpeed(40000);\r\n        }\r\n        if(IsOnBlack(1) && IsOnWhite(2)) {\r\n            //Turn sharp left\r\n            SetLeftMotorSpeed(4500);\r\n            SetRightMotorSpeed(24050);\r\n        }\r\n        if(IsOnWhite(1) && IsOnWhite(2)) {\r\n            //Turn Sharpest left\r\n            SetLeftMotorSpeed(0);\r\n            SetRightMotorSpeed(30000);\r\n        }\r\n    }\r\n\r\n    // All Right Turns\r\n    if (IsOnWhite(0) && IsOnWhite(1) && IsOnBlack(2) && IsOnWhite(3)){\r\n      SetLeftMotorSpeed(40000);\r\n      SetRightMotorSpeed(30000);\r\n    }\r\n    if (IsOnWhite(0) && IsOnBlack(3))\r\n    {\r\n        if(IsOnBlack(1) && IsOnBlack(2)) {\r\n            //Turn right\r\n            SetLeftMotorSpeed(40000);\r\n            SetRightMotorSpeed(35000);\r\n        }\r\n        if(IsOnWhite(1) && IsOnBlack(2)) {\r\n            //Turn sharp right\r\n            SetLeftMotorSpeed(24050);\r\n            SetRightMotorSpeed(4500);\r\n        }\r\n        if(IsOnWhite(1) && IsOnWhite(2)) {\r\n            //Turn sharpest right \r\n            SetLeftMotorSpeed(30000);\r\n            SetRightMotorSpeed(0);\r\n        }\r\n    }\r\n}"},
{"ID":"22592144","width":75,"length":179,"WheelRadius":34,"NumberOfSensors":4,"SensorSpacing":13,"BodyColour":"e4f500","WheelColour":"f40b0b","LEDColour":"red","Code":"bool IsOnBlack(int sensor)\r\n{\r\n    return an[sensor] > black_threshold;\r\n}\r\n\r\nbool IsOnWhite(int sensor) \r\n{\r\n    return an[sensor] < black_threshold;\r\n}\r\n\r\nvoid SetLeftMotorSpeed(int speed)\r\n{\r\n    Set_PWM(0, speed);\r\n}\r\n\r\nvoid SetRightMotorSpeed(int speed)\r\n{\r\n    Set_PWM(1, speed);\r\n}\r\n\r\nvoid RobotControl()\r\n{\r\n    if(IsOnWhite(0) && IsOnBlack(1) && IsOnBlack(2) && IsOnWhite(3)){\r\n        // Go Straight \r\n        SetLeftMotorSpeed(40000);\r\n        SetRightMotorSpeed(40000);\r\n    }\r\n\r\n    // All Left Turns\r\n    if (IsOnWhite(0) && IsOnBlack(1) && IsOnWhite(2) && IsOnWhite(3)){\r\n      SetLeftMotorSpeed(30000);\r\n      SetRightMotorSpeed(40000);\r\n    }\r\n    if (IsOnBlack(0) && IsOnWhite(3)) {\r\n        if(IsOnBlack(1) && IsOnBlack(2)){\r\n            // Turn left\r\n            SetLeftMotorSpeed(38000);\r\n            SetRightMotorSpeed(40000);\r\n        }\r\n        if(IsOnBlack(1) && IsOnWhite(2)) {\r\n            //Turn sharp left\r\n            SetLeftMotorSpeed(25000);\r\n            SetRightMotorSpeed(7000);\r\n        }\r\n        if(IsOnWhite(1) && IsOnWhite(2)) {\r\n            //Turn Sharpest left\r\n            SetLeftMotorSpeed(0);\r\n            SetRightMotorSpeed(30000);\r\n        }\r\n    }\r\n\r\n    // All Right Turns\r\n    if (IsOnWhite(0) && IsOnWhite(1) && IsOnBlack(2) && IsOnWhite(3)){\r\n      SetLeftMotorSpeed(40000);\r\n      SetRightMotorSpeed(30000);\r\n    }\r\n    if (IsOnWhite(0) && IsOnBlack(3))\r\n    {\r\n        if(IsOnBlack(1) && IsOnBlack(2)) {\r\n            //Turn right\r\n            SetLeftMotorSpeed(40000);\r\n            SetRightMotorSpeed(38000);\r\n        }\r\n        if(IsOnWhite(1) && IsOnBlack(2)) {\r\n            //Turn sharp right\r\n            SetLeftMotorSpeed(7000);\r\n            SetRightMotorSpeed(25000);\r\n        }\r\n        if(IsOnWhite(1) && IsOnWhite(2)) {\r\n            //Turn sharpest right \r\n            SetLeftMotorSpeed(30000);\r\n            SetRightMotorSpeed(0);\r\n        }\r\n    }\r\n}"},
{"ID":"22593256","width":100,"length":110,"WheelRadius":25,"NumberOfSensors":2,"SensorSpacing":25,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\n{\n\tif(an[0] > black_threshold)\n\t{\n\t\tSet_PWM(0, 0);\t\t// Motor 0 stop\n\t\tSet_PWM(1, 2000);\t// Motor 1 go\n\t}\n\telse\n\t{\n\t\tSet_PWM(0, 2000);\t// Motor 0 go\n\t\tSet_PWM(1, 0);\t\t// Motor 1 stop\n\t}\n}\n\t\t\t"},
{"ID":"22526930","width":130,"length":160,"WheelRadius":50,"NumberOfSensors":3,"SensorSpacing":15,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"int a1[3];\nvoid RobotControl()\n{\n\n\nfor(int n = 0; n < 3; n++) {\na1[n] = an[n];\n\n\n\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 2000);\nSet_PWM(1, 4000);\n}\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 0);\nSet_PWM(1, 5000);\n}\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\nSet_PWM(0, 4000);\nSet_PWM(1, 2000);\n}\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 5500);\nSet_PWM(1, 5500);\n}\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\nSet_PWM(0, 5000);\nSet_PWM(1, 0);\n}\n}\n}\n"},
{"ID":"22464641","width":110,"length":164,"WheelRadius":41,"NumberOfSensors":4,"SensorSpacing":12,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"int prev_err; // Must be declared outside RobotControl() to be remembered next time\n\n\nvoid RobotControl()\n{\nint x, y, M0out, M1out, p, i, d, Kp, Ki, Kd, err, itot, dt, Output, averageSpeed, vband;\t\n\nM0out = x;\nM1out = y;\n\nKd = -50;\n\nif ((an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold && an[3] <= black_threshold))\n{     //STRAIGHT\nerr = 0;\nKp =  0;\naverageSpeed = 8000;\t    \n}    \nelse if(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold && an[3] > black_threshold)\n{ // WHITE, BLACK, BLACK, BLACK\nerr = 1;\nKp =  3000;\naverageSpeed = 5000;\n}\nelse if(an[0] > black_threshold && an[1] > black_threshold && an[2] > black_threshold && an[3] <= black_threshold)\n{ // BLACK, BLACK, BLACK, WHITE\nerr = -1;\nKp =  3000;\naverageSpeed = 5000;\n}\n else if(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold && an[3] <= black_threshold)\n{ // WHITE, BLACK, WHITE, WHITE\nerr = -1;\nKp =  3000;\naverageSpeed = 5000;\n}\nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold && an[3] <= black_threshold)\n{ // WHITE, WHITE, BLACK, WHITE\nerr = 1; \nKp =  3000;\naverageSpeed = 5000;\n} \nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold && an[3] > black_threshold)\n{ // WHITE, WHITE, BLACK, BLACK\nerr = 2;\nKp =  1900;\naverageSpeed = 4200;\nKd = -50;\n}\nelse if(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold && an[3] <= black_threshold)\n{ // BLACK, BLACK, WHITE, WHITE\nerr = -2;\nKp =  1900;\naverageSpeed = 4200;\nKd = -50;\n}\nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] <= black_threshold && an[3] > black_threshold)\n{ // WHITE, WHITE, WHITE, BLACK\nerr = -3;\nKp =  1660;\naverageSpeed = 4000;\nKd = -50;\n}\nelse if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold && an[3] <= black_threshold)\n{ // BLACK, WHITE, WHITE, WHITE\nerr = 3;\nKp =  1660;\naverageSpeed = 4000;\nKd = -50;\n}    \n\n//  if separated for all white (for accumulator).\n\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] <= black_threshold && an[3] <= black_threshold) \n{ // ALL WHITE!!\nerr = prev_err;\nKp =  1660;\naverageSpeed = 4000;\nKd = -50;\n\n}\n\np = Kp * err;\n// itot = itot + (err * Ki);     // PD CONTROLLER\nd = Kd * (prev_err - err);\nOutput = p + d;       // + itot; // itot is 0 for now.\nprev_err = err;\n\nx = (averageSpeed + Output);\ny = (averageSpeed - Output);\n\n\nif (y >= 8193)     \n{\n    y = 8192;\n}\nif (x >= 8193)     \n{\n    x = 8192;\n}\nif (x <= -1)\n{\n    x == 0;\n}\nif (y <= -1)\n{\n    y == 0;\n} \n\n\nSet_PWM(0, x);\nSet_PWM(1, y);\n\t    \n}\n\n\n\n\n\n// int accu; // accumulator for all white \n\n/*\naccu++;\nerr == err * (1 + (accu / 10));\n}\nelse \n{\naccu = 0;\n*/\n\n\n//code for prolonged all white state.\n\n/*\nif (prev_err <= 0)\n{\n    x == x * (1 + (accu / 100));  //sharper turn the longer all white.\n}\nelse if (prev_err >= 0)\n{\n    y == y * (1 + (accu / 100));  //sharper turn other way the longer all white.\n}\nelse \n{    \n    //prev_err = 0, do nothing.\n}\n*/"}
]